//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerFlagComponent playerFlag { get { return (PlayerFlagComponent)GetComponent(GameComponentsLookup.PlayerFlag); } }
    public bool hasPlayerFlag { get { return HasComponent(GameComponentsLookup.PlayerFlag); } }

    public void AddPlayerFlag(bool newIsPlayer) {
        var index = GameComponentsLookup.PlayerFlag;
        var component = (PlayerFlagComponent)CreateComponent(index, typeof(PlayerFlagComponent));
        component.isPlayer = newIsPlayer;
        AddComponent(index, component);
    }

    public void ReplacePlayerFlag(bool newIsPlayer) {
        var index = GameComponentsLookup.PlayerFlag;
        var component = (PlayerFlagComponent)CreateComponent(index, typeof(PlayerFlagComponent));
        component.isPlayer = newIsPlayer;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerFlag() {
        RemoveComponent(GameComponentsLookup.PlayerFlag);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerFlag;

    public static Entitas.IMatcher<GameEntity> PlayerFlag {
        get {
            if (_matcherPlayerFlag == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerFlag);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerFlag = matcher;
            }

            return _matcherPlayerFlag;
        }
    }
}
