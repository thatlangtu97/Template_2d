//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameInput gameInput { get { return (GameInput)GetComponent(GameComponentsLookup.GameInput); } }
    public bool hasGameInput { get { return HasComponent(GameComponentsLookup.GameInput); } }

    public void AddGameInput(System.Action newAction) {
        var index = GameComponentsLookup.GameInput;
        var component = (GameInput)CreateComponent(index, typeof(GameInput));
        component.action = newAction;
        AddComponent(index, component);
    }

    public void ReplaceGameInput(System.Action newAction) {
        var index = GameComponentsLookup.GameInput;
        var component = (GameInput)CreateComponent(index, typeof(GameInput));
        component.action = newAction;
        ReplaceComponent(index, component);
    }

    public void RemoveGameInput() {
        RemoveComponent(GameComponentsLookup.GameInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameInput;

    public static Entitas.IMatcher<GameEntity> GameInput {
        get {
            if (_matcherGameInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameInput);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameInput = matcher;
            }

            return _matcherGameInput;
        }
    }
}
